name: Automated Backup for Deployment

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  create-backup:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create deployment backup
      id: backup
      run: |
        # Only create backup if database exists
        if [ -f "data/budget.db" ] || [ -f "$HOME/.budget_manager/budget.db" ]; then
          echo "📦 Creating deployment backup..."
          python backup_system.py backup deployment_$(date +%Y%m%d_%H%M%S).json
          echo "backup_created=true" >> $GITHUB_OUTPUT
        else
          echo "📋 No database found, skipping backup"
          echo "backup_created=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit backup files
      if: steps.backup.outputs.backup_created == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add backup files
        git add backups/
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "📝 No backup changes to commit"
        else
          git commit -m "🗄️ Automated backup for deployment [skip ci]"
          git push
          echo "✅ Backup committed and pushed"
        fi
        
    - name: Deployment notification
      run: |
        echo "🚀 Deployment backup workflow completed"
        echo "   - Backup created: ${{ steps.backup.outputs.backup_created }}"
        echo "   - Repository ready for Streamlit Cloud deployment" 